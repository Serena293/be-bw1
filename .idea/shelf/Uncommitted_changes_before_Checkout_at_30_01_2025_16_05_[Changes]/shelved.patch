Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport AltreClassi.PercorriTratta;\r\nimport DAO.*;\r\nimport Entities.*;\r\nimport jakarta.persistence.EntityManager;\r\nimport jakarta.persistence.EntityManagerFactory;\r\nimport jakarta.persistence.Persistence;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport java.util.Scanner;\r\nimport com.github.javafaker.Faker;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        // Log dell'avvio dell'applicazione\r\n        final Logger logger = LoggerFactory.getLogger(Main.class);\r\n        logger.info(\"Applicazione avviata.\");\r\n\r\n        // Crea l'EntityManager\r\n        EntityManagerFactory emf = Persistence.createEntityManagerFactory(\"defaultdb\");\r\n        EntityManager em = emf.createEntityManager();\r\n        Scanner scanner = new Scanner(System.in);\r\n        Faker faker = new Faker();\r\n\r\n        // Creazione dei DAO\r\n        AbbonamentoDaoImpl abbonamentoDao = new AbbonamentoDaoImpl(em);\r\n        AutobusDao autobusDao = new AutobusDao(em);\r\n        BigliettoDaoImpl bigliettoDao = new BigliettoDaoImpl(em);\r\n        DistributoriDao distributoriDao = new DistributoriDao(em);\r\n        MezziDAO mezziDAO = new MezziDAO(em);\r\n        NegozioDao negozioDao = new NegozioDao(em);\r\n        RivenditoriDao rivenditoriDao = new RivenditoriDao(em);\r\n        TramDao tramDao = new TramDao(em);\r\n        TrattaDAO trattaDAO = new TrattaDAO(em);\r\n        UtenteSempliceDAO utenteSempliceDAO = new UtenteSempliceDAO(em);\r\n\r\n        // 1. Crea un'istanza di Tratta con valori casuali\r\n        String partenza = faker.address().cityName();\r\n        String capolinea = faker.address().cityName();\r\n        double tempoDiPercorrenza = faker.number().randomDouble(2, 30, 120);\r\n        Tratta tratta = new Tratta(partenza, capolinea, tempoDiPercorrenza);\r\n        Mezzi.Stato stato = Mezzi.Stato.values()[faker.number().numberBetween(0, Mezzi.Stato.values().length)];\r\n        String descrizione = faker.lorem().sentence();\r\n        Autobus autobus = new Autobus(stato, descrizione, tratta);\r\n\r\n        em.getTransaction().begin();\r\n        try {\r\n            // 5. Utilizza i DAO per persistere le entità nel database\r\n            trattaDAO.save(tratta);  // salva la tratta\r\n            autobusDao.save(autobus);  // salva l'autobus\r\n\r\n            // Commit della transazione\r\n            em.getTransaction().commit();\r\n            System.out.println(\"Le entità sono state salvate nel database.\");\r\n        } catch (Exception e) {\r\n            em.getTransaction().rollback();\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n        PercorriTratta percorrerTratta = new PercorriTratta(mezziDAO);\r\n        percorrerTratta.incrementaPercorrenza(autobus, tratta);\r\n\r\n\r\n        // Ciclo per verificare il tipo di utente\r\n        while (true) {\r\n            System.out.println(\"Premere 1 per Amministratore, Premere 2 per Utente, Premere Q per uscire\");\r\n            String input = scanner.next().toUpperCase();\r\n\r\n            if (tipoUtente == '1') {\r\n                System.out.println(\"Hai scelto Amministratore\");\r\n                logger.info(\"Tipo utente = amministratore\");\r\n                break;\r\n            } else if (tipoUtente == '2') {\r\n                System.out.println(\"Hai scelto Utente\");\r\n                logger.info(\"Tipo utente = utente semplice\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void gestisciAmministratore(Scanner scanner, DistributoriDao distributoriDao, MezziDAO mezziDAO) {\r\n        while (true) {\r\n            System.out.println(\"Scegli un'opzione: 1. Controlla Distributori, 2. Controlla Mezzi, 3. Torna alla scelta iniziale\");\r\n            String input = scanner.next();\r\n\r\n            switch (input) {\r\n                case \"1\":\r\n                    System.out.println(\"Hai scelto Controlla Distributori\");\r\n                    // Logica per controllare i distributori\r\n                    break;\r\n                case \"2\":\r\n                    System.out.println(\"Hai scelto Controlla Mezzi\");\r\n                    // Logica per controllare i mezzi\r\n                    break;\r\n                case \"3\":\r\n                    System.out.println(\"Torna alla scelta iniziale.\");\r\n                    return;\r\n                default:\r\n                    System.out.println(\"Input non valido.\");\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void gestisciUtente(Scanner scanner, UtenteSempliceDAO utenteSempliceDAO, AbbonamentoDaoImpl abbonamentoDao) {\r\n        while (true) {\r\n            System.out.println(\"Hai la tessera? (SI/NO)\");\r\n            String rispostaTessera = scanner.next().toUpperCase();\r\n\r\n            if (rispostaTessera.equals(\"SI\")) {\r\n                System.out.println(\"Inserisci il numero della tessera:\");\r\n                String numeroTessera = scanner.next();\r\n                System.out.println(\"La tessera è attiva? (SI/NO)\");\r\n                String tesseraAttiva = scanner.next().toUpperCase();\r\n\r\n                if (tesseraAttiva.equals(\"SI\")) {\r\n                    System.out.println(\"Scegli il tipo di abbonamento: 1. Settimanale, 2. Mensile\");\r\n                    int sceltaAbbonamento = scanner.nextInt();\r\n                    switch (sceltaAbbonamento) {\r\n                        case 1:\r\n                            System.out.println(\"Hai scelto l'abbonamento Settimanale\");\r\n                            // Logica per l'abbonamento settimanale\r\n                            break;\r\n                        case 2:\r\n                            System.out.println(\"Hai scelto l'abbonamento Mensile\");\r\n                            // Logica per l'abbonamento mensile\r\n                            break;\r\n                        default:\r\n                            System.out.println(\"Scelta non valida.\");\r\n                            break;\r\n                    }\r\n                } else {\r\n                    System.out.println(\"La tessera non è attiva.\");\r\n                }\r\n            }else if (rispostaTessera.equals(\"NO\")) {\r\n                System.out.println(\"Vuoi fare la tessera? (SI/NO)\");\r\n                String creaTessera = scanner.next().toUpperCase();\r\n                if (creaTessera.equals(\"SI\")) {\r\n                    System.out.println(\"Tessera creata.\");\r\n                    // Logica per creare la tessera\r\n                } else {\r\n                    System.out.println(\"Vuoi fare un biglietto? (SI/NO)\");\r\n                    String creaBiglietto = scanner.next().toUpperCase();\r\n                    if (creaBiglietto.equals(\"SI\")) {\r\n                        System.out.println(\"Per quale mezzo? (autobus/tram)\");\r\n                        String mezzo = scanner.next().toUpperCase();\r\n                        if (mezzo.equals(\"AUTOBUS\")) {\r\n                            System.out.println(\"Biglietto per autobus creato.\");\r\n                            // Logica per creare il biglietto per autobus\r\n                        } else if (mezzo.equals(\"TRAM\")) {\r\n                            System.out.println(\"Biglietto per tram creato.\");\r\n                            // Logica per creare il biglietto per tram\r\n                        } else {\r\n                            System.out.println(\"Mezzo non valido. Riprova.\");\r\n                        }\r\n                    } else if (creaBiglietto.equals(\"NO\")) {\r\n                        System.out.println(\"Operazione terminata.\");\r\n                    } else {\r\n                        System.out.println(\"Input non valido. Riprova.\");\r\n                    }\r\n                }\r\n            } else {\r\n                System.out.println(\"Input non valido.\");\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	(revision f80cb2a55779e441c1613819b6552ad4c7cfa448)
+++ b/src/main/java/org/example/Main.java	(date 1738247702285)
@@ -69,11 +69,11 @@
             System.out.println("Premere 1 per Amministratore, Premere 2 per Utente, Premere Q per uscire");
             String input = scanner.next().toUpperCase();
 
-            if (tipoUtente == '1') {
+            if (input == '1') {
                 System.out.println("Hai scelto Amministratore");
                 logger.info("Tipo utente = amministratore");
                 break;
-            } else if (tipoUtente == '2') {
+            } else if (input == '2') {
                 System.out.println("Hai scelto Utente");
                 logger.info("Tipo utente = utente semplice");
                 break;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"45fe0e0e-4496-44d0-be39-ab9e1c258823\" name=\"Changes\" comment=\"SetUp\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$/../be-buldWild1\" source=\"Serena-7\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/../be-buldWild1\" value=\"Serena-8\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Serena293&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Serena293/be-bw1.git&quot;,\r\n    &quot;accountId&quot;: &quot;239d5d18-51c8-4c0b-93e6-f59b25509a26&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sCxRHa0Od6VJFnwfGNaxSEZ464\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"niccoBranch\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Utente/Downloads/u4d14\",\r\n    \"settings.editor.selected.configurable\": \"reference.settings.project.maven.repository.indices\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Utente\\Desktop\\Epicode\\BE\\be-buldWild1\\src\\main\" />\r\n      <recent name=\"C:\\Users\\Utente\\Desktop\\Epicode\\BE\\be-buldWild1\\src\\main\\java\" />\r\n      <recent name=\"C:\\Users\\Utente\\Desktop\\Epicode\\BE\\be-buldWild1\\src\\main\\resources\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"45fe0e0e-4496-44d0-be39-ab9e1c258823\" name=\"Changes\" comment=\"\" />\r\n      <created>1737973350885</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1737973350885</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"SetUp\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1737973412117</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1737973412117</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"User\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"*\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"SetUp\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"SetUp\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f80cb2a55779e441c1613819b6552ad4c7cfa448)
+++ b/.idea/workspace.xml	(date 1738247773322)
@@ -5,6 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="45fe0e0e-4496-44d0-be39-ab9e1c258823" name="Changes" comment="SetUp">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -68,7 +69,7 @@
     "Application.Main.executor": "Run",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "niccoBranch",
+    "git-widget-placeholder": "master",
     "ignore.virus.scanning.warn.message": "true",
     "kotlin-language-version-configured": "true",
     "last_opened_file_path": "C:/Users/Utente/Downloads/u4d14",
